"""
Functions to summarize clinical trial results using Claude via MCP.
"""

from typing import List, Dict

def call_claude_via_mcp(prompt: str) -> str:
    """
    Stub for MCP integration with Claude Desktop.
    Replace this with your actual MCP call to send the prompt to Claude and get the summary.
    """
    # Example: send the prompt over MCP and return the response
    # For now, just return a placeholder
    return "[Claude summary would appear here]"

def summarize_trials(trials: List[Dict]) -> str:
    """
    Format trial data into a prompt and send to Claude via MCP for summarization.

    Args:
        trials (List[Dict]): List of structured clinical trial dictionaries.

    Returns:
        str: Summary generated by Claude.
    """
    if not trials:
        return "No clinical trials found for the specified mutation."
    # Format the trials into a readable prompt
    prompt = "Summarize the following clinical trials relevant to a genetic mutation. For each, highlight the NCT number, title, summary, and any notable interventions or locations.\n\n"
    for i, trial in enumerate(trials, 1):
        prompt += f"Trial {i}:\n"
        prompt += f"NCT ID: {trial.get('nct_id', '')}\n"
        prompt += f"Title: {trial.get('title', '')}\n"
        prompt += f"Summary: {trial.get('brief_summary', '')}\n"
        prompt += f"Interventions: {', '.join(trial.get('interventions', []))}\n"
        prompt += f"Locations: {', '.join(trial.get('locations', []))}\n"
        prompt += f"URL: {trial.get('url', '')}\n\n"
    # Send to Claude via MCP
    summary = call_claude_via_mcp(prompt)
    return summary
